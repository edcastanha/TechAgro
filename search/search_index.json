{"config":{"indexing":"full","lang":["pt"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Autor - Edson Bezerra Perfil - linkedin.com/edsonlbfilho/ API para Gest\u00e3o de Produtores Rurais Aviso: Esta API \u00e9 uma prova de conceito (POC) para fins de avalia\u00e7\u00e3o t\u00e9cnica. Todos os dados s\u00e3o fict\u00edcios e n\u00e3o representam informa\u00e7\u00f5es reais. N\u00e3o foi implementado nenhum mecanismo de autentica\u00e7\u00e3o para facilitar o acesso e uso da API durante a avalia\u00e7\u00e3o, eliminando a necessidade de cadastro ou login. Vis\u00e3o Geral Esta aplica\u00e7\u00e3o fornece uma API REST para cadastro e gest\u00e3o de produtores rurais, propriedades, safras e culturas, com valida\u00e7\u00f5es de neg\u00f3cio, dashboard de dados agregados e documenta\u00e7\u00e3o autom\u00e1tica. Tecnologias Python 3.11+ Django 5 Django REST Framework PostgreSQL Nginx (opcional, para produ\u00e7\u00e3o) Docker & Docker Compose drf-spectacular (OpenAPI/Swagger) MkDocs (para documenta\u00e7\u00e3o) Executando o Projeto via Docker e Docker Compose P\u00e1gina sobre execu\u00e7\u00e3o via Docker Executando o Projeto localmente (sem Docker) P\u00e1gina sobre execu\u00e7\u00e3o local Endpoints principais URL Descri\u00e7\u00e3o http://localhost:7000/v1/api/produtores/ CRUD de produtores http://localhost:7000/v1/api/propriedades/ CRUD de propriedades http://localhost:7000/v1/api/safras/ CRUD de safras http://localhost:7000/v1/api/atividades/ CRUD de culturas plantadas http://localhost:7000/v1/api/dashboard/ Dados agregados para gr\u00e1ficos Testes O projeto utiliza pytest e pytest-django para testes automatizados. Executando os testes pytest Gerando relat\u00f3rio de cobertura pytest --cov=techagro --cov-report=term-missing Dica: Os testes devem cobrir as principais regras de neg\u00f3cio, valida\u00e7\u00f5es e endpoints da API. Observabilidade Logs e monitoramento podem ser incrementados conforme necessidade. Deploy Pronto para deploy em qualquer nuvem (exemplo: Fly.io, Heroku, etc). Basta configurar as vari\u00e1veis de ambiente. Autor Edson Bezerra Perfil Projeto para avalia\u00e7\u00e3o t\u00e9cnic.a, n\u00e3o \u00e9 um produto finalizado. Sinta-se \u00e0 vontade para contribuir ou sugerir melhorias!","title":"Autor - Edson Bezerra"},{"location":"#autor-edson-bezerra","text":"","title":"Autor - Edson Bezerra"},{"location":"#perfil-linkedincomedsonlbfilho","text":"","title":"Perfil - linkedin.com/edsonlbfilho/"},{"location":"#api-para-gestao-de-produtores-rurais","text":"Aviso: Esta API \u00e9 uma prova de conceito (POC) para fins de avalia\u00e7\u00e3o t\u00e9cnica. Todos os dados s\u00e3o fict\u00edcios e n\u00e3o representam informa\u00e7\u00f5es reais. N\u00e3o foi implementado nenhum mecanismo de autentica\u00e7\u00e3o para facilitar o acesso e uso da API durante a avalia\u00e7\u00e3o, eliminando a necessidade de cadastro ou login.","title":"API para Gest\u00e3o de Produtores Rurais"},{"location":"#visao-geral","text":"Esta aplica\u00e7\u00e3o fornece uma API REST para cadastro e gest\u00e3o de produtores rurais, propriedades, safras e culturas, com valida\u00e7\u00f5es de neg\u00f3cio, dashboard de dados agregados e documenta\u00e7\u00e3o autom\u00e1tica.","title":"Vis\u00e3o Geral"},{"location":"#tecnologias","text":"Python 3.11+ Django 5 Django REST Framework PostgreSQL Nginx (opcional, para produ\u00e7\u00e3o) Docker & Docker Compose drf-spectacular (OpenAPI/Swagger) MkDocs (para documenta\u00e7\u00e3o)","title":"Tecnologias"},{"location":"#executando-o-projeto-via-docker-e-docker-compose","text":"P\u00e1gina sobre execu\u00e7\u00e3o via Docker","title":"Executando o Projeto via Docker e Docker Compose"},{"location":"#executando-o-projeto-localmente-sem-docker","text":"P\u00e1gina sobre execu\u00e7\u00e3o local","title":"Executando o Projeto localmente (sem Docker)"},{"location":"#endpoints-principais","text":"URL Descri\u00e7\u00e3o http://localhost:7000/v1/api/produtores/ CRUD de produtores http://localhost:7000/v1/api/propriedades/ CRUD de propriedades http://localhost:7000/v1/api/safras/ CRUD de safras http://localhost:7000/v1/api/atividades/ CRUD de culturas plantadas http://localhost:7000/v1/api/dashboard/ Dados agregados para gr\u00e1ficos","title":"Endpoints principais"},{"location":"#testes","text":"O projeto utiliza pytest e pytest-django para testes automatizados.","title":"Testes"},{"location":"#executando-os-testes","text":"pytest","title":"Executando os testes"},{"location":"#gerando-relatorio-de-cobertura","text":"pytest --cov=techagro --cov-report=term-missing Dica: Os testes devem cobrir as principais regras de neg\u00f3cio, valida\u00e7\u00f5es e endpoints da API.","title":"Gerando relat\u00f3rio de cobertura"},{"location":"#observabilidade","text":"Logs e monitoramento podem ser incrementados conforme necessidade.","title":"Observabilidade"},{"location":"#deploy","text":"Pronto para deploy em qualquer nuvem (exemplo: Fly.io, Heroku, etc). Basta configurar as vari\u00e1veis de ambiente.","title":"Deploy"},{"location":"#autor","text":"Edson Bezerra Perfil Projeto para avalia\u00e7\u00e3o t\u00e9cnic.a, n\u00e3o \u00e9 um produto finalizado. Sinta-se \u00e0 vontade para contribuir ou sugerir melhorias!","title":"Autor"},{"location":"ExecDocker/","text":"Execu\u00e7\u00e3o do projeto via Docker e Docker Compose 1. Clone o reposit\u00f3rio git clone https://github.com/edcastanha/TechAgro cd TechAgro Executando o Projeto 2. Configure as vari\u00e1veis de ambiente Copie o arquivo .env.example para .env e ajuste se necess\u00e1rio: cp .env.example .env Via Docker docker-compose up --build A API estar\u00e1 dispon\u00edvel em http://localhost:7000/v1/api/ REDOC e SWAGGER para documenta\u00e7\u00e3o autom\u00e1tica.","title":"Executar via Docker"},{"location":"ExecDocker/#execucao-do-projeto-via-docker-e-docker-compose","text":"","title":"Execu\u00e7\u00e3o do projeto via Docker e Docker Compose"},{"location":"ExecDocker/#1-clone-o-repositorio","text":"git clone https://github.com/edcastanha/TechAgro cd TechAgro","title":"1. Clone o reposit\u00f3rio"},{"location":"ExecDocker/#executando-o-projeto","text":"","title":"Executando o Projeto"},{"location":"ExecDocker/#2-configure-as-variaveis-de-ambiente","text":"Copie o arquivo .env.example para .env e ajuste se necess\u00e1rio: cp .env.example .env","title":"2. Configure as vari\u00e1veis de ambiente"},{"location":"ExecDocker/#via-docker","text":"docker-compose up --build","title":"Via Docker"},{"location":"ExecDocker/#a-api-estara-disponivel-em-httplocalhost7000v1api","text":"REDOC e SWAGGER para documenta\u00e7\u00e3o autom\u00e1tica.","title":"A API estar\u00e1 dispon\u00edvel em http://localhost:7000/v1/api/"},{"location":"ExecLocal/","text":"Executando o Projeto localmente (sem Docker) Crie e ative um ambiente virtual: python3 -m venv .virtual source .virtual/bin/activate Instale o Poetry (caso n\u00e3o tenha): pip install poetry Instale as depend\u00eancias do projeto: poetry install Configure as vari\u00e1veis de ambiente: cp .env.example .env Execute as migra\u00e7\u00f5es e popule o banco com dados mock: python techagro/manage.py migrate Dados de exemplo (mock) Para facilitar testes e demonstra\u00e7\u00f5es, voc\u00ea pode popular o banco com dados fict\u00edcios (produtores, propriedades, safras e culturas v\u00e1lidas) usando: python manage.py popular_mock Esse comando garante que todos os dados respeitam as regras de neg\u00f3cio (CPFs/CNPJs v\u00e1lidos, \u00e1reas consistentes, etc). Rode o servidor local: python techagro/manage.py runserver A API estar\u00e1 dispon\u00edvel em http://localhost:7000/v1/api/ REDOC e SWAGGER para documenta\u00e7\u00e3o autom\u00e1tica.","title":"Executar via Python"},{"location":"ExecLocal/#executando-o-projeto-localmente-sem-docker","text":"","title":"Executando o Projeto localmente (sem Docker)"},{"location":"ExecLocal/#crie-e-ative-um-ambiente-virtual","text":"python3 -m venv .virtual source .virtual/bin/activate","title":"Crie e ative um ambiente virtual:"},{"location":"ExecLocal/#instale-o-poetry-caso-nao-tenha","text":"pip install poetry","title":"Instale o Poetry (caso n\u00e3o tenha):"},{"location":"ExecLocal/#instale-as-dependencias-do-projeto","text":"poetry install","title":"Instale as depend\u00eancias do projeto:"},{"location":"ExecLocal/#configure-as-variaveis-de-ambiente","text":"cp .env.example .env","title":"Configure as vari\u00e1veis de ambiente:"},{"location":"ExecLocal/#execute-as-migracoes-e-popule-o-banco-com-dados-mock","text":"python techagro/manage.py migrate","title":"Execute as migra\u00e7\u00f5es e popule o banco com dados mock:"},{"location":"ExecLocal/#dados-de-exemplo-mock","text":"Para facilitar testes e demonstra\u00e7\u00f5es, voc\u00ea pode popular o banco com dados fict\u00edcios (produtores, propriedades, safras e culturas v\u00e1lidas) usando: python manage.py popular_mock Esse comando garante que todos os dados respeitam as regras de neg\u00f3cio (CPFs/CNPJs v\u00e1lidos, \u00e1reas consistentes, etc).","title":"Dados de exemplo (mock)"},{"location":"ExecLocal/#rode-o-servidor-local","text":"python techagro/manage.py runserver","title":"Rode o servidor local:"},{"location":"ExecLocal/#a-api-estara-disponivel-em-httplocalhost7000v1api","text":"REDOC e SWAGGER para documenta\u00e7\u00e3o autom\u00e1tica.","title":"A API estar\u00e1 dispon\u00edvel em http://localhost:7000/v1/api/"},{"location":"desafio/","text":"Brain Agriculture - Teste T\u00e9cnico v2 Ol\u00e1! Bem-vindo(a) ao nosso teste t\u00e9cnico. Estamos muito animados para conhecer mais sobre voc\u00ea, suas habilidades t\u00e9cnicas e sua forma de resolver problemas. Este teste foi pensado para ser um reflexo do que valorizamos em nosso time, e esperamos que voc\u00ea se sinta confort\u00e1vel e confiante durante o processo. O que queremos avaliar? Nosso objetivo com este teste \u00e9 entender melhor como voc\u00ea: Resolve problemas relacionados \u00e0 l\u00f3gica de programa\u00e7\u00e3o e orienta\u00e7\u00e3o a objetos. Interpreta requisitos de neg\u00f3cio e os transforma em solu\u00e7\u00f5es t\u00e9cnicas. Aplica boas pr\u00e1ticas de desenvolvimento, com foco em c\u00f3digo limpo, test\u00e1vel, de f\u00e1cil manuten\u00e7\u00e3o e observ\u00e1vel. Garante que o sistema seja escal\u00e1vel e confi\u00e1vel, principalmente ao lidar com grande volume de dados. Escreve documenta\u00e7\u00f5es claras para facilitar a integra\u00e7\u00e3o e manuten\u00e7\u00e3o por outros desenvolvedores ou clientes. Dica: Imagine que voc\u00ea est\u00e1 criando uma aplica\u00e7\u00e3o que ser\u00e1 utilizada por clientes, parceiros ou at\u00e9 mesmo por outros desenvolvedores. Queremos ver sua aten\u00e7\u00e3o aos detalhes! O que voc\u00ea precisa desenvolver? A proposta \u00e9 criar uma aplica\u00e7\u00e3o para gerenciar o cadastro de produtores rurais, com os seguintes dados: CPF ou CNPJ Nome do produtor Nome da fazenda (propriedade) Cidade Estado \u00c1rea total da fazenda (em hectares) \u00c1rea agricult\u00e1vel (em hectares) \u00c1rea de vegeta\u00e7\u00e3o (em hectares) Safras (ex: Safra 2021, Safra 2022) Culturas plantadas (ex.: Soja na Safra 2021, Milho na Safra 2021, Caf\u00e9 na Safra 2022) Requisitos de neg\u00f3cio Permitir o cadastro, edi\u00e7\u00e3o e exclus\u00e3o de produtores rurais. Validar o CPF ou CNPJ fornecido pelo usu\u00e1rio. Garantir que a soma das \u00e1reas agricult\u00e1vel e de vegeta\u00e7\u00e3o n\u00e3o ultrapasse a \u00e1rea total da fazenda. Permitir o registro de v\u00e1rias culturas plantadas por fazenda do produtor. Um produtor pode estar associado a 0, 1 ou mais propriedades rurais. Uma propriedade rural pode ter 0, 1 ou mais culturas plantadas por safra. Exibir um dashboard com: Total de fazendas cadastradas (quantidade). Total de hectares registrados (\u00e1rea total). Gr\u00e1ficos de pizza: Por estado. Por cultura plantada. Por uso do solo (\u00e1rea agricult\u00e1vel e vegeta\u00e7\u00e3o). Tecnologias sugeridas Sabemos que voc\u00ea pode ter seu pr\u00f3prio estilo, mas aqui est\u00e3o algumas tecnologias e boas pr\u00e1ticas que valorizamos: Conceitos : SOLID, KISS, Clean Code, API Contracts, Testes, Arquitetura em camadas. Documenta\u00e7\u00f5es : Para facilitar o entendimento do funcionamento do sistema, \u00e9 importante incluir um README claro, uma especifica\u00e7\u00e3o OpenAPI e, caso necess\u00e1rio, diagramas que ajudem a visualizar a arquitetura ou os processos. B\u00f4nus : Se conseguir disponibilizar a aplica\u00e7\u00e3o na nuvem e acess\u00edvel via internet, ser\u00e1 um diferencial! Se voc\u00ea for desenvolvedor BACKEND: Desenvolva uma API REST . Utilize Docker para distribuir a aplica\u00e7\u00e3o. Utilize Postgres como banco de dados. Crie os endpoints necess\u00e1rios para atender os requisitos de neg\u00f3cio. Desenvolva testes unit\u00e1rios e integrados. Estruture dados \"mockados\" para testes. Inclua logs para garantir a observabilidade do sistema, facilitando o monitoramento e a identifica\u00e7\u00e3o de poss\u00edveis problemas. Utilize um framework de ORM. Se voc\u00ea for desenvolvedor BACKEND Python: Utilize Python 3 . Utilize Django , Flask ou FastAPI . Como enviar seu projeto? Ao concluir o desenvolvimento, suba o c\u00f3digo-fonte para um reposit\u00f3rio no GitHub (ou outro provedor de sua escolha). Certifique-se de que o reposit\u00f3rio seja p\u00fablico ou que possamos acess\u00e1-lo, e nos envie o link. Nota final: Queremos que voc\u00ea aproveite esse desafio para mostrar suas habilidades, mas tamb\u00e9m para aprender e se divertir. Se tiver d\u00favidas ou precisar de alguma orienta\u00e7\u00e3o durante o processo, estamos aqui para ajudar! Boa sorte! \ud83c\udf1f","title":"Do Desafio"},{"location":"desafio/#brain-agriculture-teste-tecnico-v2","text":"Ol\u00e1! Bem-vindo(a) ao nosso teste t\u00e9cnico. Estamos muito animados para conhecer mais sobre voc\u00ea, suas habilidades t\u00e9cnicas e sua forma de resolver problemas. Este teste foi pensado para ser um reflexo do que valorizamos em nosso time, e esperamos que voc\u00ea se sinta confort\u00e1vel e confiante durante o processo.","title":"Brain Agriculture - Teste T\u00e9cnico v2"},{"location":"desafio/#o-que-queremos-avaliar","text":"Nosso objetivo com este teste \u00e9 entender melhor como voc\u00ea: Resolve problemas relacionados \u00e0 l\u00f3gica de programa\u00e7\u00e3o e orienta\u00e7\u00e3o a objetos. Interpreta requisitos de neg\u00f3cio e os transforma em solu\u00e7\u00f5es t\u00e9cnicas. Aplica boas pr\u00e1ticas de desenvolvimento, com foco em c\u00f3digo limpo, test\u00e1vel, de f\u00e1cil manuten\u00e7\u00e3o e observ\u00e1vel. Garante que o sistema seja escal\u00e1vel e confi\u00e1vel, principalmente ao lidar com grande volume de dados. Escreve documenta\u00e7\u00f5es claras para facilitar a integra\u00e7\u00e3o e manuten\u00e7\u00e3o por outros desenvolvedores ou clientes. Dica: Imagine que voc\u00ea est\u00e1 criando uma aplica\u00e7\u00e3o que ser\u00e1 utilizada por clientes, parceiros ou at\u00e9 mesmo por outros desenvolvedores. Queremos ver sua aten\u00e7\u00e3o aos detalhes!","title":"O que queremos avaliar?"},{"location":"desafio/#o-que-voce-precisa-desenvolver","text":"A proposta \u00e9 criar uma aplica\u00e7\u00e3o para gerenciar o cadastro de produtores rurais, com os seguintes dados: CPF ou CNPJ Nome do produtor Nome da fazenda (propriedade) Cidade Estado \u00c1rea total da fazenda (em hectares) \u00c1rea agricult\u00e1vel (em hectares) \u00c1rea de vegeta\u00e7\u00e3o (em hectares) Safras (ex: Safra 2021, Safra 2022) Culturas plantadas (ex.: Soja na Safra 2021, Milho na Safra 2021, Caf\u00e9 na Safra 2022)","title":"O que voc\u00ea precisa desenvolver?"},{"location":"desafio/#requisitos-de-negocio","text":"Permitir o cadastro, edi\u00e7\u00e3o e exclus\u00e3o de produtores rurais. Validar o CPF ou CNPJ fornecido pelo usu\u00e1rio. Garantir que a soma das \u00e1reas agricult\u00e1vel e de vegeta\u00e7\u00e3o n\u00e3o ultrapasse a \u00e1rea total da fazenda. Permitir o registro de v\u00e1rias culturas plantadas por fazenda do produtor. Um produtor pode estar associado a 0, 1 ou mais propriedades rurais. Uma propriedade rural pode ter 0, 1 ou mais culturas plantadas por safra. Exibir um dashboard com: Total de fazendas cadastradas (quantidade). Total de hectares registrados (\u00e1rea total). Gr\u00e1ficos de pizza: Por estado. Por cultura plantada. Por uso do solo (\u00e1rea agricult\u00e1vel e vegeta\u00e7\u00e3o).","title":"Requisitos de neg\u00f3cio"},{"location":"desafio/#tecnologias-sugeridas","text":"Sabemos que voc\u00ea pode ter seu pr\u00f3prio estilo, mas aqui est\u00e3o algumas tecnologias e boas pr\u00e1ticas que valorizamos: Conceitos : SOLID, KISS, Clean Code, API Contracts, Testes, Arquitetura em camadas. Documenta\u00e7\u00f5es : Para facilitar o entendimento do funcionamento do sistema, \u00e9 importante incluir um README claro, uma especifica\u00e7\u00e3o OpenAPI e, caso necess\u00e1rio, diagramas que ajudem a visualizar a arquitetura ou os processos. B\u00f4nus : Se conseguir disponibilizar a aplica\u00e7\u00e3o na nuvem e acess\u00edvel via internet, ser\u00e1 um diferencial!","title":"Tecnologias sugeridas"},{"location":"desafio/#se-voce-for-desenvolvedor-backend","text":"Desenvolva uma API REST . Utilize Docker para distribuir a aplica\u00e7\u00e3o. Utilize Postgres como banco de dados. Crie os endpoints necess\u00e1rios para atender os requisitos de neg\u00f3cio. Desenvolva testes unit\u00e1rios e integrados. Estruture dados \"mockados\" para testes. Inclua logs para garantir a observabilidade do sistema, facilitando o monitoramento e a identifica\u00e7\u00e3o de poss\u00edveis problemas. Utilize um framework de ORM.","title":"Se voc\u00ea for desenvolvedor BACKEND:"},{"location":"desafio/#se-voce-for-desenvolvedor-backend-python","text":"Utilize Python 3 . Utilize Django , Flask ou FastAPI .","title":"Se voc\u00ea for desenvolvedor BACKEND Python:"},{"location":"desafio/#como-enviar-seu-projeto","text":"Ao concluir o desenvolvimento, suba o c\u00f3digo-fonte para um reposit\u00f3rio no GitHub (ou outro provedor de sua escolha). Certifique-se de que o reposit\u00f3rio seja p\u00fablico ou que possamos acess\u00e1-lo, e nos envie o link. Nota final: Queremos que voc\u00ea aproveite esse desafio para mostrar suas habilidades, mas tamb\u00e9m para aprender e se divertir. Se tiver d\u00favidas ou precisar de alguma orienta\u00e7\u00e3o durante o processo, estamos aqui para ajudar! Boa sorte! \ud83c\udf1f","title":"Como enviar seu projeto?"},{"location":"license/","text":"MIT License Copyright (c) 2025 Edson L B Filho Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"Licenca"},{"location":"license/#mit-license","text":"Copyright (c) 2025 Edson L B Filho Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"MIT License"},{"location":"playload/","text":"Exemplos de payloads Criar produtor (POST /v1/api/produtores/) { \"documento\": \"12345678909\", \"nome\": \"Produtor Exemplo\" } Resposta (201 Created) { \"id\": \"<uuid>\", \"documento\": \"12345678909\", \"tipo_documento\": \"CPF\", \"nome\": \"Produtor Exemplo\", \"Propriedades\": [] } Criar propriedade (POST /v1/api/propriedades/) { \"produtor\": \"<id_produtor>\", \"nome_propriedade\": \"Fazenda Exemplo\", \"area_total_hectares\": 100, \"area_agricultavel_hectares\": 60, \"area_vegetacao_hectares\": 40, \"cidade\": \"Uberl\u00e2ndia\", \"estado\": \"MG\" } Criar safra (POST /v1/api/safras/) { \"propriedade\": \"<id_propriedade>\", \"ano\": 2024, \"data_inicio\": \"2024-01-01\", \"data_fim\": \"2024-12-31\" } Criar cultura plantada (POST /v1/api/atividades/) { \"safra\": \"<id_safra>\", \"nome_cultura\": \"Soja\", \"area_plantada_hectares\": 50 } Exemplo de resposta do dashboard (GET /v1/api/dashboard/) { \"total_fazendas\": 6, \"total_hectares\": 800, \"por_estado\": [ {\"estado\": \"MG\", \"qtd\": 2}, {\"estado\": \"SP\", \"qtd\": 2} ], \"por_cultura\": [ {\"nome_cultura\": \"Soja\", \"qtd\": 4}, {\"nome_cultura\": \"Milho\", \"qtd\": 3} ], \"uso_solo\": { \"total_agricultavel\": 400, \"total_vegetacao\": 200 } }","title":"Exemplo de Dados"},{"location":"playload/#exemplos-de-payloads","text":"","title":"Exemplos de payloads"},{"location":"playload/#criar-produtor-post-v1apiprodutores","text":"{ \"documento\": \"12345678909\", \"nome\": \"Produtor Exemplo\" }","title":"Criar produtor (POST /v1/api/produtores/)"},{"location":"playload/#resposta-201-created","text":"{ \"id\": \"<uuid>\", \"documento\": \"12345678909\", \"tipo_documento\": \"CPF\", \"nome\": \"Produtor Exemplo\", \"Propriedades\": [] }","title":"Resposta (201 Created)"},{"location":"playload/#criar-propriedade-post-v1apipropriedades","text":"{ \"produtor\": \"<id_produtor>\", \"nome_propriedade\": \"Fazenda Exemplo\", \"area_total_hectares\": 100, \"area_agricultavel_hectares\": 60, \"area_vegetacao_hectares\": 40, \"cidade\": \"Uberl\u00e2ndia\", \"estado\": \"MG\" }","title":"Criar propriedade (POST /v1/api/propriedades/)"},{"location":"playload/#criar-safra-post-v1apisafras","text":"{ \"propriedade\": \"<id_propriedade>\", \"ano\": 2024, \"data_inicio\": \"2024-01-01\", \"data_fim\": \"2024-12-31\" }","title":"Criar safra (POST /v1/api/safras/)"},{"location":"playload/#criar-cultura-plantada-post-v1apiatividades","text":"{ \"safra\": \"<id_safra>\", \"nome_cultura\": \"Soja\", \"area_plantada_hectares\": 50 }","title":"Criar cultura plantada (POST /v1/api/atividades/)"},{"location":"playload/#exemplo-de-resposta-do-dashboard-get-v1apidashboard","text":"{ \"total_fazendas\": 6, \"total_hectares\": 800, \"por_estado\": [ {\"estado\": \"MG\", \"qtd\": 2}, {\"estado\": \"SP\", \"qtd\": 2} ], \"por_cultura\": [ {\"nome_cultura\": \"Soja\", \"qtd\": 4}, {\"nome_cultura\": \"Milho\", \"qtd\": 3} ], \"uso_solo\": { \"total_agricultavel\": 400, \"total_vegetacao\": 200 } }","title":"Exemplo de resposta do dashboard (GET /v1/api/dashboard/)"},{"location":"sobre/","text":"Edson Lourenco Este documento \u00e9 uma carta de apresenta\u00e7\u00e3o de Edson Lourenco, um profissional de tecnologia da informa\u00e7\u00e3o desde 2005 , com experi\u00eancia em levantamento de requisitos, desenvolvimento de software e arquitetura de solu\u00e7\u00f5es. Ele \u00e9 formado em An\u00e1lise e Desenvolvimento de Sistemas pela UNIESP. Objetivo Profissional O objetivo de Edson \u00e9 aplicar seus conhecimentos especializados para impulsionar efici\u00eancia e crescimento, buscando entregar resultados que excedam as expectativas. Ele foca na constru\u00e7\u00e3o de sistemas escal\u00e1veis e de alto desempenho e utiliza pr\u00e1ticas de observabilidade para garantir a qualidade das entregas e a estabilidade dos sistemas em produ\u00e7\u00e3o. Compet\u00eancias T\u00e9cnicas Principais Edson possui expertise t\u00e9cnica em desenvolvimento Full Stack com foco em Python, combinando conhecimentos em PHP, Swift e Node.js para entregas em Backend e Mobile. Sua experi\u00eancia s\u00f3lida abrange: Arquitetura de microsservi\u00e7os e solu\u00e7\u00f5es event-driven Infraestrutura AWS e computa\u00e7\u00e3o em nuvem (AWS, GCP e Azure) Bancos de dados SQL e NoSQL (MySQL, PostgreSQL, MongoDB, Redis, DynamoDB) DevOps com implementa\u00e7\u00e3o de pipelines CI/CD Processamento de dados em larga escala e sistemas ETL Desenvolvimento de RPAs e automa\u00e7\u00e3o de processos Atendimento Chatbots APIs RESTful, gRPC e GraphQL Frameworks: Laravel, Odoo, Spring Boot, Django, Flask e FastAPI Experi\u00eancias Relevantes Simple Energy: Liderou o desenvolvimento de solu\u00e7\u00f5es ETL, processando mais de 65 mil arquivos de faturamento mensais para o setor energ\u00e9tico brasileiro. Tamb\u00e9m implementou pipelines de CI/CD na AWS, otimizando o ciclo de desenvolvimento e aumentando a confiabilidade das entregas. C6 Bank (Tech Analyst iOS): Implementou solu\u00e7\u00f5es otimizadas utilizando Swift e UIKit, com foco em desempenho e experi\u00eancia do usu\u00e1rio . Projeto Inovador (Simuladores de Automobilismo Virtual): Desenvolveu um projeto de hardware e software que demonstrou excelente performance em testes de stress no evento SPJAM 2015 (PUC-SP), operando continuamente por mais de 48 horas.","title":"Sobre"},{"location":"sobre/#edson-lourenco","text":"Este documento \u00e9 uma carta de apresenta\u00e7\u00e3o de Edson Lourenco, um profissional de tecnologia da informa\u00e7\u00e3o desde 2005 , com experi\u00eancia em levantamento de requisitos, desenvolvimento de software e arquitetura de solu\u00e7\u00f5es. Ele \u00e9 formado em An\u00e1lise e Desenvolvimento de Sistemas pela UNIESP.","title":"Edson Lourenco"},{"location":"sobre/#objetivo-profissional","text":"O objetivo de Edson \u00e9 aplicar seus conhecimentos especializados para impulsionar efici\u00eancia e crescimento, buscando entregar resultados que excedam as expectativas. Ele foca na constru\u00e7\u00e3o de sistemas escal\u00e1veis e de alto desempenho e utiliza pr\u00e1ticas de observabilidade para garantir a qualidade das entregas e a estabilidade dos sistemas em produ\u00e7\u00e3o.","title":"Objetivo Profissional"},{"location":"sobre/#competencias-tecnicas-principais","text":"Edson possui expertise t\u00e9cnica em desenvolvimento Full Stack com foco em Python, combinando conhecimentos em PHP, Swift e Node.js para entregas em Backend e Mobile. Sua experi\u00eancia s\u00f3lida abrange: Arquitetura de microsservi\u00e7os e solu\u00e7\u00f5es event-driven Infraestrutura AWS e computa\u00e7\u00e3o em nuvem (AWS, GCP e Azure) Bancos de dados SQL e NoSQL (MySQL, PostgreSQL, MongoDB, Redis, DynamoDB) DevOps com implementa\u00e7\u00e3o de pipelines CI/CD Processamento de dados em larga escala e sistemas ETL Desenvolvimento de RPAs e automa\u00e7\u00e3o de processos Atendimento Chatbots APIs RESTful, gRPC e GraphQL Frameworks: Laravel, Odoo, Spring Boot, Django, Flask e FastAPI","title":"Compet\u00eancias T\u00e9cnicas Principais"},{"location":"sobre/#experiencias-relevantes","text":"Simple Energy: Liderou o desenvolvimento de solu\u00e7\u00f5es ETL, processando mais de 65 mil arquivos de faturamento mensais para o setor energ\u00e9tico brasileiro. Tamb\u00e9m implementou pipelines de CI/CD na AWS, otimizando o ciclo de desenvolvimento e aumentando a confiabilidade das entregas. C6 Bank (Tech Analyst iOS): Implementou solu\u00e7\u00f5es otimizadas utilizando Swift e UIKit, com foco em desempenho e experi\u00eancia do usu\u00e1rio . Projeto Inovador (Simuladores de Automobilismo Virtual): Desenvolveu um projeto de hardware e software que demonstrou excelente performance em testes de stress no evento SPJAM 2015 (PUC-SP), operando continuamente por mais de 48 horas.","title":"Experi\u00eancias Relevantes"}]}