# Generated by Django 5.2.4 on 2025-07-04 03:22

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Endereco",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Data e hora de criação do registro.",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Data e hora da última atualização do registro.",
                    ),
                ),
                (
                    "cep",
                    models.CharField(
                        blank=True,
                        help_text="CEP da propriedade (opcional).",
                        max_length=9,
                        null=True,
                    ),
                ),
                (
                    "logradouro",
                    models.CharField(
                        blank=True,
                        help_text="Rua, avenida, estrada etc. (opcional).",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "numero",
                    models.CharField(
                        blank=True,
                        help_text="Número do imóvel (opcional).",
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "complemento",
                    models.CharField(
                        blank=True,
                        help_text="Complemento do endereço (ex: Lote 12, Fundos) (opcional).",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "bairro",
                    models.CharField(
                        blank=True,
                        help_text="Bairro onde a Propriedade está localizada (opcional).",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "cidade",
                    models.CharField(
                        help_text="Cidade onde a Propriedade está localizada.",
                        max_length=100,
                    ),
                ),
                (
                    "estado",
                    models.CharField(
                        help_text="Sigla do estado (UF) onde a Propriedade está localizada.",
                        max_length=2,
                    ),
                ),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        help_text="Latitude da propriedade (ex: -23.55052).",
                        max_digits=9,
                        null=True,
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        help_text="Longitude da propriedade (ex: -46.63330).",
                        max_digits=9,
                        null=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "Endereço",
                "verbose_name_plural": "Endereços",
            },
        ),
        migrations.CreateModel(
            name="ProdutorRural",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Data e hora de criação do registro.",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Data e hora da última atualização do registro.",
                    ),
                ),
                (
                    "nome",
                    models.CharField(
                        help_text="Nome completo ou Razão Social.", max_length=255
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        help_text="Endereço de e-mail.", max_length=255, unique=True
                    ),
                ),
                (
                    "telefone",
                    models.CharField(
                        blank=True,
                        help_text="Número de telefone para contato.",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "documento",
                    models.CharField(
                        help_text="CPF (11 dígitos) ou CNPJ (14 dígitos). Somente números, ou com máscara.",
                        max_length=18,
                        unique=True,
                    ),
                ),
                (
                    "tipo_documento",
                    models.CharField(
                        choices=[("CPF", "CPF"), ("CNPJ", "CNPJ")],
                        help_text="Tipo de documento (CPF ou CNPJ), inferido automaticamente.",
                        max_length=4,
                    ),
                ),
            ],
            options={
                "verbose_name": "Produtor Rural",
                "verbose_name_plural": "Produtores Rurais",
                "ordering": ["nome"],
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Data e hora de criação do registro.",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Data e hora da última atualização do registro.",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
